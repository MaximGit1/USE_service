[tool.poetry]
name = "use"
version = "0.1.0"
description = ""
authors = ["MaximGit1 <allq137x@gmail.com>"]
readme = "README.md"
packages = [{include = "use", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
pre-commit = "^4.0.1"
ruff = "^0.8.6"
mypy = "^1.14.1"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
xfail_strict = true
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
markers = ["value_objects"]
filterwarnings = []

[tool.mypy]
exclude = [".venv"]
python_version = "3.10"
strict = true
pretty = true

no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true
implicit_reexport = true
namespace_packages = true
ignore_missing_imports = true

warn_unused_ignores = true
warn_return_any = true
warn_redundant_casts = true

allow_untyped_calls = true
allow_subclassing_any = true
allow_untyped_decorators = true

disallow_incomplete_defs = true
disallow_any_unimported = false

[tool.ruff]
src = ["src", "tests"]
target-version = "py310"
line-length = 79
fix = true

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D", "S101", "COM812", "ISC001", "ANN401"]

[tool.ruff.format]
docstring-code-format = true